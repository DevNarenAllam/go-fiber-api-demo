// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/health": {
            "get": {
                "description": "Check the health of the service",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Health check",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "503": {
                        "description": "Service unavailable",
                        "schema": {}
                    }
                }
            }
        },
        "/players": {
            "get": {
                "description": "Get a list of all players",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "players"
                ],
                "summary": "Get all players",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main.Player"
                            }
                        }
                    }
                }
            }
        },
        "/players/{id}": {
            "get": {
                "description": "Get a player by their ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "players"
                ],
                "summary": "Get player by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Player ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.Player"
                        }
                    },
                    "400": {
                        "description": "Invalid player ID",
                        "schema": {}
                    },
                    "404": {
                        "description": "Player not found",
                        "schema": {}
                    }
                }
            }
        }
    },
    "definitions": {
        "main.Player": {
            "type": "object",
            "properties": {
                "bats": {
                    "type": "string"
                },
                "bbrefID": {
                    "type": "string"
                },
                "birthCity": {
                    "type": "string"
                },
                "birthCountry": {
                    "type": "string"
                },
                "birthDay": {
                    "type": "integer"
                },
                "birthMonth": {
                    "type": "integer"
                },
                "birthState": {
                    "type": "string"
                },
                "birthYear": {
                    "type": "integer"
                },
                "deathCity": {
                    "type": "string"
                },
                "deathCountry": {
                    "type": "string"
                },
                "deathDay": {
                    "type": "integer"
                },
                "deathMonth": {
                    "type": "integer"
                },
                "deathState": {
                    "type": "string"
                },
                "deathYear": {
                    "type": "integer"
                },
                "debut": {
                    "type": "string"
                },
                "finalGame": {
                    "type": "string"
                },
                "height": {
                    "type": "integer"
                },
                "nameFirst": {
                    "type": "string"
                },
                "nameGiven": {
                    "type": "string"
                },
                "nameLast": {
                    "type": "string"
                },
                "playerID": {
                    "type": "string"
                },
                "retroID": {
                    "type": "string"
                },
                "throws": {
                    "type": "string"
                },
                "weight": {
                    "type": "integer"
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:3000",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Players API",
	Description:      "This is a sample server for managing players.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
